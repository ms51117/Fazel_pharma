"""create all relation and all foregn key

Revision ID: e4ece0ef325d
Revises: 189d13b4f5c2
Create Date: 2025-10-06 15:45:53.499389

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'e4ece0ef325d'
down_revision: Union[str, Sequence[str], None] = '189d13b4f5c2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

payment_status_enum_type = sa.Enum('NOT_SEEN', 'ACCEPTED', 'REJECTED', name='paymentstatusenum')


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'tbl_DrugMap', 'tbl_DiseaseType', ['diseases_type_id'], ['diseases_type_id'])
    op.create_foreign_key(None, 'tbl_DrugMap', 'tbl_Drug', ['drugs_id'], ['drugs_id'])
    op.drop_column('tbl_DrugMap', 'drugs_map_id')
    op.add_column('tbl_Message', sa.Column('messages_seen', sa.Boolean(), nullable=False))
    op.add_column('tbl_Message', sa.Column('messages_sender', sa.Boolean(), nullable=False))
    op.alter_column('tbl_Message', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('tbl_Message', 'telegram_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.create_foreign_key(None, 'tbl_Message', 'tbl_User', ['telegram_id'], ['telegram_id'])
    op.create_foreign_key(None, 'tbl_Message', 'tbl_User', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'tbl_Order', 'tbl_User', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'tbl_OrderList', 'tbl_Order', ['order_id'], ['order_id'])
    op.create_foreign_key(None, 'tbl_OrderList', 'tbl_Drug', ['drug_id'], ['drugs_id'])
    op.add_column('tbl_Patient', sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
    op.drop_column('tbl_Patient', 'lname')
    op.drop_column('tbl_Patient', 'fname')
    op.alter_column('tbl_PaymentList', 'payment_status',
               existing_type=sa.INTEGER(),
               type_=sa.Enum('NOT_SEEN', 'ACCEPTED', 'REJECTED', name='paymentstatusenum'),
               existing_nullable=False)
    op.create_foreign_key(None, 'tbl_UserRolePermission', 'tbl_UserRole', ['role_id'], ['role_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tbl_UserRolePermission', type_='foreignkey')
    op.alter_column('tbl_PaymentList', 'payment_status',
               existing_type=sa.Enum('NOT_SEEN', 'ACCEPTED', 'REJECTED', name='paymentstatusenum'),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.add_column('tbl_Patient', sa.Column('fname', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('tbl_Patient', sa.Column('lname', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_column('tbl_Patient', 'full_name')
    op.drop_constraint(None, 'tbl_OrderList', type_='foreignkey')
    op.drop_constraint(None, 'tbl_OrderList', type_='foreignkey')
    op.drop_constraint(None, 'tbl_Order', type_='foreignkey')
    op.drop_constraint(None, 'tbl_Message', type_='foreignkey')
    op.drop_constraint(None, 'tbl_Message', type_='foreignkey')
    op.alter_column('tbl_Message', 'telegram_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('tbl_Message', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('tbl_Message', 'messages_sender')
    op.drop_column('tbl_Message', 'messages_seen')
    op.add_column('tbl_DrugMap', sa.Column('drugs_map_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'tbl_DrugMap', type_='foreignkey')
    op.drop_constraint(None, 'tbl_DrugMap', type_='foreignkey')
    # ### end Alembic commands ###
